name: Backend Build Test

on:
  pull_request:
    branches: ["main"] # main 브랜치에 PR을 보낼때 실행
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean

jobs:
  build:
    runs-on: [self-hosted, Linux, X64]

    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: ls -al ./buildasdsad;

#      - name: Build TEST
#        run: ./gradlew bootJar

#      - name: 🧠 Cache node_modules + install-state
#        uses: actions/cache@v3
#        with:
#          path: |
#            node_modules
#            .yarn/install-state.gz
#          key: ${{ runner.os }}-yarn-nodemodules-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-nodemodules-
#
#      - name: Check Build result
#        run: ls -al ./build/libs
#
#      - name: Upload to server
#        uses: appleboy/scp-action@master
#        with:
#         host: ${{ secrets.SERVER_HOST }}
#         username: ${{ secrets.SERVER_USER }}
#         key: ${{ secrets.SERVER_SSH_KEY }}
#         source: "frontend_output.tar.gz"
#         target: "/tmp"
#
#      - name: SSH and deploy
#        uses: appleboy/ssh-action@master
#        with:
#         host: ${{ secrets.SERVER_HOST }}
#         username: ${{ secrets.SERVER_USER }}
#         key: ${{ secrets.SERVER_SSH_KEY }}
#         script: |
#           echo "🧹 기존 프론트 디렉토리 제거..."
#           rm -rf /home/ec2-user/medizen/frontend/build_resource/*
#           echo "📦 빌드 결과 압축 해제..."
#           tar xzf /tmp/frontend_output.tar.gz -C /home/ec2-user/medizen/frontend/build_resource
#
#           echo "🔁 프론트 컨테이너 재시작..."
#           docker compose -f /home/ec2-user/medizen/docker/docker-compose.yaml restart medizen_frontend_dev



